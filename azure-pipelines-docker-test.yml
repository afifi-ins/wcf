trigger:
  branches:
    include:
    - main

pr:
  branches:
    include:
    - main

pool:
  vmImage: 'windows-latest'
  #vmImage: 'ubuntu-latest'
  
resources:
  containers:
  - container: web_hosted_service_container
    #image: 'mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-ltsc2019'
    image: 'mcr.microsoft.com/windows/nanoserver:1809' #--IIS not installed
    #image: 'mcr.microsoft.com/dotnet/framework/wcf:latest'
    #options: --entrypoint "./src/System.Private.ServiceModel/tools/scripts/SetupWcfIISHostedService.cmd 38" 
    options: --workdir "C:\__w\1\s" --entrypoint "src\System.Private.ServiceModel\tools\scripts\SetupWcfIISHostedService.cmd"  

    #options: --entrypoint "1/s/src/System.Private.ServiceModel/tools/scripts/SetupWcfIISHostedService.cmd"


    #; wcf\src\System.Private.ServiceModel\tools\scripts\SetupWcfIISHostedService.cmd 38
  - container: windows_container
    image: 'mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-ltsc2019'
    #image: 'mcr.microsoft.com/dotnet/sdk:6.0'
  - container: linux_container
    #image: 'ubuntu:20.04' --not working - wget/curl not found
    image: 'mcr.microsoft.com/dotnet/sdk:6.0'
    
  
stages:
- stage: Build_Service_stage
  displayName: Build and Run WCF Services
  
  jobs:
  - job: list_images
    displayName: list docker images
    steps:
    - checkout: self
    - script: docker image list
    - script: dir

  - job: test
    displayName: build image
    steps:
      - task: Docker@2
        displayName: Build Docker Image
        inputs:
          repository: serivce/webhosted
          command: build
          Dockerfile: docker/Dockerfile
          tags: '1.0'

      - script: |
          dir
        displayName: List files
      
      - script: |
          echo "Executing docker run command"
          docker run --name wcfservice -i -v $(Build.SourcesDirectory):\wcf -w \wcf serivce/webhosted:1.0
        displayName: Run docker inline in pipeline

  - job: Build_IIS_Service_job
    steps:
    - checkout: self
    displayName: Build and run web hosted service
    services:
      web_hosted_service: wcfservice


  - job: Build_Selfhosted_Service_job
    displayName: Build and run self-hosted service
    steps:
    - bash: echo "A"

- stage: Run_WCF_Tests
  displayName: Build and Run WCF Tests
  jobs:
  - job: Windows_release_job
    displayName: Windows Release tests
    # container: windows_container
    # steps:
    # - script: eng\common\cibuild.cmd 
    #     -configuration Release
    #     -preparemachine
    #     /p:ServiceUri=wcfcoresrv3.redmond.corp.microsoft.com/WcfService38 /p:Root_Certificate_Installed=true /p:Client_Certificate_Installed=true /p:SSL_Available=true
    #     /p:Test=true /p:IntegrationTest=true /p:Pack=true /p:Publish=true
    #   displayName: Run tests

  - job: Windows_debug_job
    displayName: Windows Debug tests
    # container: windows_container
    # steps:
    # - script: eng\common\cibuild.cmd 
    #     -configuration Debug
    #     -preparemachine
    #     /p:ServiceUri=wcfcoresrv3.redmond.corp.microsoft.com/WcfService38 /p:Root_Certificate_Installed=true /p:Client_Certificate_Installed=true /p:SSL_Available=true
    #     /p:Test=true /p:IntegrationTest=true /p:Pack=true /p:Publish=true
    #   displayName: Run tests

  - job: Linux_release_job
    displayName: Linux Release tests
    pool:
      vmImage: 'ubuntu-latest'
    container: linux_container


    # steps:
    # - script: eng/common/cibuild.sh
    #           -configuration Release
    #           -preparemachine
    #           /p:ServiceUri=wcfcoresrv3.redmond.corp.microsoft.com/WcfService38 /p:Root_Certificate_Installed=true /p:Client_Certificate_Installed=true /p:SSL_Available=true
    #           /p:Test=false
    #   displayName: Linux Build

    # - script: eng/common/build.sh
    #     --configuration Release
    #     --prepareMachine
    #     --ci
    #     --test
    #     --integrationTest
    #     /p:ServiceUri=wcfcoresrv3.redmond.corp.microsoft.com/WcfService38 /p:Root_Certificate_Installed=true /p:Client_Certificate_Installed=true /p:SSL_Available=true
    #     /p:TestJob=Linux
    #     /bl:$(Build.SourcesDirectory)/artifacts/log/Release/Tests.binlog
    #   displayName: Linux - Run Tests

  - job: Linux_debug_job
    displayName: Linux Debug tests
    steps:
    - bash: echo "A"